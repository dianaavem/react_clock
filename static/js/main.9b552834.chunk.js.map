{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","clockName","timerId","this","window","setInterval","value","now","toString","slice","getRandomName","setState","console","info","clearInterval","className","toUTCString","Component","App","isContextmenu","handleContextMenu","e","preventDefault","handleClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAaO,IAAMA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,KACVC,UAAW,WAHf,EAMEC,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMJ,EAhBZ,WACE,IAAMK,EAAQN,KAAKO,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAaMI,GAElB,EAAKC,SAAS,CAAEV,gBACf,MAEHG,OAAOC,aAAY,WACjB,IAAMN,EAAO,IAAIC,KAEjB,EAAKW,SAAS,CAAEZ,SAGhBa,QAAQC,KAAKd,KACZ,OAtBP,kCAyBE,WACEK,OAAOU,cAAcX,KAAKD,WA1B9B,oBA6BE,WACE,MAA4BC,KAAKL,MAAzBG,EAAR,EAAQA,UAAWF,EAAnB,EAAmBA,KAEnB,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGd,IAEH,+BACG,cAEH,sBAAMc,UAAU,cAAhB,SACGhB,EAAKiB,cAAcP,OAAO,IAAK,YAzC1C,GAA2BQ,aCLdC,EAAb,4MACEpB,MAAQ,CACNqB,eAAe,GAFnB,EAeEC,kBAAoB,SAACC,GACnBA,EAAEC,iBACF,EAAKX,SAAS,CAAEQ,eAAe,KAjBnC,EAoBEI,YAAc,WACZ,EAAKZ,SAAS,CAAEQ,eAAe,KArBnC,uDAKE,WACEK,SAASC,iBAAiB,cAAetB,KAAKiB,mBAC9CI,SAASC,iBAAiB,QAAStB,KAAKoB,eAP5C,kCAUE,WACEC,SAASE,oBAAoB,cAAevB,KAAKiB,mBACjDI,SAASE,oBAAoB,QAASvB,KAAKoB,eAZ/C,oBAwBE,WACE,IAAQJ,EAAkBhB,KAAKL,MAAvBqB,cAER,OACE,sBAAKJ,UAAU,MAAf,UACE,6CAECI,GAAiB,cAAC,EAAD,WA/B1B,GAAyBF,aCLzBU,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.9b552834.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  date: Date,\n  clockName: string,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class Clock extends Component<{}, State> {\n  state = {\n    date: new Date(),\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const clockName = getRandomName();\n\n      this.setState({ clockName });\n    }, 3300);\n\n    window.setInterval(() => {\n      const date = new Date();\n\n      this.setState({ date });\n\n      // eslint-disable-next-line\n      console.info(date);\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName, date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n        <span>\n          {' time is '}\n        </span>\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  isContextmenu: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isContextmenu: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('click', this.handleClick);\n  }\n\n  handleContextMenu = (e: MouseEvent) => {\n    e.preventDefault();\n    this.setState({ isContextmenu: false });\n  };\n\n  handleClick = () => {\n    this.setState({ isContextmenu: true });\n  };\n\n  render() {\n    const { isContextmenu } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {isContextmenu && <Clock />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}